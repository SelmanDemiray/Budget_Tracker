services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: budget_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password_here}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  app:
    build: 
      context: .
      args:
        DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-your_secure_password_here}@postgres:5432/budget_tracker
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-your_secure_password_here}@postgres:5432/budget_tracker
      RUST_LOG: ${RUST_LOG:-info}
      ENVIRONMENT: ${ENVIRONMENT:-production}
    ports:
      - "0.0.0.0:3000:3000"  # Explicitly bind to all interfaces for cloud VM access
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./static:/app/static:ro
    networks:
      - app-network
    restart: unless-stopped
    # Add health check for the app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
